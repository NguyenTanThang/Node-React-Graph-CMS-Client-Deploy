{"version":3,"sources":["config/client.js","queries/queries.js","components/Partial/SideNav.js","components/Partial/TopNav.js","components/User/Login.js","utils/dateParser.js","components/Student/EditStudent.js","components/Trainer/EditTrainer.js","components/User/Profile.js","components/Course/EditCourse.js","components/Course/CourseItem.js","components/Course/AddCourse.js","components/Course/AssignStudentToCourse.js","components/Course/CourseList.js","components/Course/CourseDetails.js","components/Topic/EditTopic.js","components/Topic/TopicDetails.js","components/Student/StudentDetails.js","components/Trainer/TrainerDetails.js","components/User/ChangePassword.js","components/Topic/TopicItem.js","components/Topic/AddTopic.js","components/Topic/AssignTrainerToTopic.js","components/Topic/TopicList.js","components/Student/StudentItem.js","components/Student/AddStudent.js","components/Student/StudentList.js","components/Trainer/TrainerItem.js","components/Trainer/AddTrainer.js","components/Trainer/TrainerList.js","components/Partial/Logout.js","App.js","serviceWorker.js","index.js"],"names":["client","ApolloClient","uri","GET_COURSES","gql","ADD_COURSE","DELETE_COURSE","UPDATE_COURSE","GET_TOPICS","ADD_TOPIC","DELETE_TOPIC","UPDATE_TOPIC","GET_STUDENTS","ADD_STUDENT","UPDATE_STUDENT","DELETE_STUDENT","GET_TRAINERS","ADD_TRAINER","UPDATE_TRAINER","DELETE_TRAINER","LOGIN","GET_USER_BY_ID","ASSIGN_STUDENT_TO_COURSE","ASSIGN_TRAINER_TO_TOPIC","GET_COURSE_BY_ID","GET_TOPIC_BY_ID","GET_STUDENT_BY_ID","GET_TRAINER_BY_ID","CHANGE_PASWORD","SideNav","userID","localStorage","getItem","userData","useQuery","variables","className","loading","error","data","getUserByID","role","email","displayProfile","to","displayNavLinks","TopNav","props","Navbar","color","light","expand","Container","NavbarBrand","aria-hidden","Login","history","push","window","location","reload","useState","setEmail","password","setPassword","useMutation","login","onSubmit","e","a","preventDefault","loginData","console","log","id","setItem","Form","FormGroup","Label","htmlFor","Input","type","placeholder","name","required","value","onChange","target","Button","block","mS","dateParserWithMonth","dateItem","parsedDate","parseInt","dateObject","Date","y","getFullYear","m","getMonth","d","getDate","length","dateParserWithMonth_ISODate","parse","EditStudent","studentItem","setName","address","setAddress","phone_number","setPhoneNumber","dob","setDob","coursesIDs","update","cache","updateStudent","students","readQuery","query","writeQuery","map","item","modal","setModal","toggle","onClick","Modal","isOpen","ModalHeader","ModalBody","studentID","rows","ModalFooter","EditTrainer","trainerItem","topicsIDs","profession","setProfession","updateTrainer","trainers","trainerID","Profile","message","student","trainer","style","marginBottom","courses","courseList","courseItem","key","topics","topicList","topicItem","title","EditCourse","updateCourse","courseID","CourseItem","created_date","deleteCourse","filter","AddCourse","addCourse","concat","AssignStudentToCourse","courseData","studentData","assignStudentToCourse","setCourseID","setStudentID","defaultValue","disabled","displayStudentSelect","selectedStudent","currentCourses","includes","displayCourseSelect","CourseList","Table","hover","CourseDetails","match","params","getCourseByID","participated_students","assignedTrainers","displayUtilBox","forEach","assigned_trainers","index","EditTopic","setTitle","courseQueryObject","updateTopic","topicID","TopicDetails","getTopicByID","course","StudentDetails","getStudentByID","user","href","TrainerDetails","getTrainerByID","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","change_password","TopicItem","deleteTopic","AddTopic","addTopic","AssignTrainerToTopic","trainerData","topicData","assignTrainerToTopic","setTrainerID","setTopicID","displayTrainerSelect","currentTopics","selectedTrainer","displayTopicSelect","TopicList","StudentItem","deleteStudent","AddStudent","setCoursesIDs","addStudent","resetValue","StudentList","TrainerItem","deleteTrainer","AddTrainer","setTopicsIDs","addTrainer","TrainerList","Logout","clearStore","removeItem","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2d384e36.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\r\nconst MAIN_PROXY_URL = \"https://node-js-sms-backend-123.herokuapp.com/\"\r\n\r\nconst client = new ApolloClient({\r\n  uri: MAIN_PROXY_URL,\r\n});\r\n\r\nexport default client;","import {\r\n  gql\r\n} from \"apollo-boost\";\r\n\r\nexport const GET_COURSES = gql `\r\n  {\r\n    courses {\r\n      id\r\n      name\r\n      created_date\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_COURSE = gql `\r\nmutation ($name: String!){\r\n    addCourse(name: $name){\r\n        id\r\n        name\r\n        created_date\r\n      }\r\n}\r\n`;\r\n\r\nexport const DELETE_COURSE = gql `\r\nmutation ($courseID: ID!){\r\n    deleteCourse(courseID: $courseID) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_COURSE = gql `\r\nmutation ($courseID: ID!, $name: String){\r\n    updateCourse(courseID: $courseID, name: $name) {\r\n      id\r\n      name\r\n      created_date\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_TOPICS = gql `\r\nquery {\r\n  topics {\r\n    id\r\n    title\r\n    created_date\r\n    courseID\r\n    course {\r\n      name\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const ADD_TOPIC = gql `\r\nmutation ($title: String!, $courseID: ID!){\r\n    addTopic(title: $title, courseID: $courseID){\r\n        id\r\n        title\r\n        created_date\r\n        courseID\r\n        course {\r\n          name\r\n        }\r\n      }\r\n}\r\n`;\r\n\r\nexport const DELETE_TOPIC = gql `\r\nmutation ($topicID: ID!){\r\n    deleteTopic(topicID: $topicID) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_TOPIC = gql `\r\nmutation ($topicID: ID!, $title: String, $courseID: ID){\r\n    updateTopic(topicID: $topicID, courseID: $courseID, title: $title) {\r\n      id\r\n      title\r\n      created_date\r\n      courseID\r\n      course {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_STUDENTS = gql `\r\nquery {\r\n  students {\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    coursesIDs\r\n    courses {\r\n      name\r\n      id\r\n    }\r\n    user {\r\n      email\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const ADD_STUDENT = gql `\r\nmutation ($name: String!, $dob: String!\r\n  , $phone_number: String!, \r\n  $address: String!,\r\n  $email: String!,\r\n  $password: String!,\r\n  $coursesIDs: [String]){\r\n  addStudent(name: $name,\r\n  dob: $dob,\r\n  phone_number: $phone_number,\r\n  address: $address,\r\n  coursesIDs: $coursesIDs,\r\n  email: $email,\r\n  password: $password) {\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    coursesIDs\r\n    courses {\r\n      name\r\n      id\r\n    }\r\n    user {\r\n      email\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const UPDATE_STUDENT = gql `\r\nmutation ($studentID: ID!, \r\n  $name: String, \r\n  $dob: String\r\n  , $phone_number: String, \r\n  $address: String,\r\n  $coursesIDs: [String]\r\n  ){\r\n  updateStudent(studentID: $studentID\r\n    , name: $name,\r\n  dob: $dob,\r\n  phone_number: $phone_number,\r\n  address: $address,\r\n  coursesIDs: $coursesIDs) {\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    coursesIDs\r\n    courses {\r\n      name\r\n      id\r\n    }\r\n    user {\r\n      email\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const DELETE_STUDENT = gql `\r\n  mutation ($studentID: ID!) {\r\n    deleteStudent(studentID: $studentID) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_TRAINERS = gql `\r\nquery {\r\n  trainers {\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    profession\r\n    topicsIDs\r\n    topics {\r\n      title\r\n    }\r\n    user {\r\n      email\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const ADD_TRAINER = gql `\r\nmutation ($name: String!,\r\n  $dob: String!,\r\n  $phone_number: String!,\r\n  $address: String!,\r\n  $topicsIDs: [String],\r\n  $email: String!,\r\n  $password: String!,\r\n  $profession: String!){\r\n\r\n  addTrainer(name: $name,\r\n  dob: $dob,\r\n  phone_number: $phone_number,\r\n  address: $address,\r\n  topicsIDs: $topicsIDs,\r\n  email: $email,\r\n  password: $password,\r\n  profession: $profession) {\r\n    id\r\n    name\r\n      dob\r\n      address\r\n      phone_number\r\n      profession\r\n      topicsIDs\r\n      topics {\r\n        title\r\n      }\r\n      user {\r\n        email\r\n      }\r\n  }\r\n}\r\n`\r\n\r\nexport const UPDATE_TRAINER = gql `\r\nmutation ($trainerID: ID!, \r\n  $name: String,\r\n  $dob: String,\r\n  $phone_number: String,\r\n  $address: String,\r\n  $topicsIDs: [String],\r\n  $profession: String){\r\n\r\n  updateTrainer(trainerID: $trainerID, \r\n  name: $name,\r\n  dob: $dob,\r\n  phone_number: $phone_number,\r\n  address: $address,\r\n  topicsIDs: $topicsIDs,\r\n  profession: $profession) {\r\n    id\r\n    name\r\n      dob\r\n      address\r\n      topicsIDs\r\n      phone_number\r\n      profession\r\n      topics {\r\n        title\r\n      }\r\n      user {\r\n        email\r\n      }\r\n  }\r\n}\r\n`\r\n\r\nexport const DELETE_TRAINER = gql `\r\n  mutation ($trainerID: ID!) {\r\n    deleteTrainer(trainerID: $trainerID) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql `\r\nmutation ($email: String!, $password: String!){\r\n  login (email: $email, password: $password){\r\n    id\r\n    role\r\n    student {\r\n      name\r\n    }\r\n    trainer {\r\n      name\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const GET_USER_BY_ID = gql`\r\nquery ($userID: ID!){\r\n  getUserByID(userID: $userID) {\r\n    id\r\n    role\r\n    email\r\n    student {\r\n      id\r\n      name\r\n      dob\r\n      address\r\n      coursesIDs\r\n      phone_number\r\n      courses {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    trainer {\r\n      id\r\n      name\r\n      dob\r\n      address\r\n      topicsIDs\r\n      phone_number\r\n      profession\r\n      topics {\r\n        title\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const ASSIGN_STUDENT_TO_COURSE = gql`\r\nmutation ($courseID: ID!, $studentID: ID!){\r\n  assignStudentToCourse(courseID: $courseID, studentID: $studentID){\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    coursesIDs\r\n    courses {\r\n      name\r\n      id\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const ASSIGN_TRAINER_TO_TOPIC = gql`\r\nmutation ($trainerID: ID!, $topicID: ID!){\r\n  assignTrainerToTopic(trainerID: $trainerID, topicID: $topicID){\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    topicsIDs\r\n    topics {\r\n      title\r\n      id\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const GET_COURSE_BY_ID = gql`\r\nquery ($courseID: ID!){\r\n  getCourseByID(courseID: $courseID){\r\n    id\r\n    name\r\n    created_date\r\n    topics {\r\n      title\r\n      id\r\n      assigned_trainers {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    participated_students {\r\n      name\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_TOPIC_BY_ID = gql`\r\nquery ($topicID: ID!){\r\n  getTopicByID(topicID: $topicID){\r\n    id\r\n    title\r\n    created_date\r\n    courseID\r\n    assigned_trainers {\r\n      name\r\n      id\r\n    }\r\n    course {\r\n      id\r\n      name\r\n      participated_students {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_STUDENT_BY_ID = gql`\r\nquery ($studentID: ID!){\r\n  getStudentByID(studentID: $studentID){\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    created_date\r\n    coursesIDs\r\n    user {\r\n      email\r\n    }\r\n    courses {\r\n      name\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_TRAINER_BY_ID = gql `\r\nquery ($trainerID: ID!) {\r\n  getTrainerByID(trainerID: $trainerID) {\r\n    id\r\n    name\r\n    dob\r\n    address\r\n    phone_number\r\n    profession\r\n    created_date\r\n    topicsIDs\r\n    topics {\r\n      title\r\n      id\r\n    }\r\n    user {\r\n      email\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const CHANGE_PASWORD = gql`\r\n  mutation ($userID: ID!, $oldPassword: String!, $newPassword: String!) {\r\n    changePassword(userID: $userID, oldPassword: $oldPassword, newPassword: $newPassword) {\r\n      id\r\n    }\r\n  }\r\n`\r\n ","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_USER_BY_ID} from \"../../queries/queries\";\r\n\r\nfunction SideNav() {\r\n    const userID = localStorage.getItem(\"userID\");\r\n    const userData = useQuery(GET_USER_BY_ID, {\r\n        variables: {userID}\r\n    });\r\n\r\n    const displayNavLinks = () => {\r\n        const {loading, error} = userData;\r\n\r\n        if (loading) return <p>Loading...</p>;\r\n        if (error) return (\r\n            <>\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </>\r\n        )\r\n\r\n        const {role} = userData.data.getUserByID;\r\n        if (role === \"Admin\"){\r\n            return (\r\n                <>\r\n                    <li>\r\n                        <Link to=\"/profile\">\r\n                            Profile\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/courses\">\r\n                            Courses\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/topics\">\r\n                            Topics\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/trainers\">\r\n                            Trainers\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/students\">\r\n                            Students\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"text-danger\" to=\"/logout\">\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </>\r\n            )\r\n        } else if (role === \"Student\" || role === \"Trainer\") {\r\n            return (\r\n                <>\r\n                    <li>\r\n                        <Link to=\"/profile\">\r\n                            Profile\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"text-danger\" to=\"/logout\">\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <li>\r\n                        <Link to=\"/\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const displayProfile = () => {\r\n        const {loading, error} = userData;\r\n\r\n        if (loading) return <p>Loading...</p>;\r\n        if (error) return (\r\n            <div className=\"profile\">\r\n                <h4>No user has been specified</h4>\r\n                <h6>Please login</h6>\r\n            </div>\r\n        )\r\n\r\n        const {role, email} = userData.data.getUserByID;\r\n        return (\r\n            <div className=\"profile\">\r\n                <h4>{email}</h4>\r\n                <h6>{role}</h6>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"side-nav\">\r\n\r\n            <div className=\"close-nav-btn\">\r\n                X\r\n            </div>\r\n            \r\n            {displayProfile()}\r\n\r\n            <div className=\"side-nav-list\">\r\n                <ul>\r\n                    {displayNavLinks()}\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Container\r\n} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst TopNav = (props) => {\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n            <NavbarBrand><Link to=\"/\">Course Management System</Link></NavbarBrand>\r\n            <div className=\"nav-btn\">\r\n                <i className=\"fas fa-bars fa-2x\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopNav;","import React, {useState} from 'react';\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport {LOGIN} from \"../../queries/queries\";\r\nimport {Form, FormGroup, Input, Button, Label, Container} from \"reactstrap\"\r\n\r\nfunction Login(props) {\r\n    const userID = localStorage.getItem(\"userID\");\r\n    if (userID){\r\n        props.history.push(\"/profile\");\r\n        window.location.reload();\r\n    }\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [login, { data }] = useMutation(LOGIN);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const loginData = await login({ variables: { email, password } });\r\n        console.log(loginData)\r\n        if (loginData.data.login.id){\r\n            localStorage.setItem(\"userID\", loginData.data.login.id);\r\n            props.history.push(\"/profile\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Login</h2>\r\n                <div className=\"box-content\">\r\n                    <Form onSubmit={onSubmit}>\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"email\">Email:</Label>\r\n                            <Input type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" required value={email} onChange={e => {\r\n                                setEmail(e.target.value)\r\n                            }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password:</Label>\r\n                            <Input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" required value={password} onChange={e => {\r\n                                setPassword(e.target.value)\r\n                            }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Button color=\"dark\" block type=\"submit\">Login</Button>\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","var mS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const dateParser = (dateItem) => {\r\n    const parsedDate = parseInt(dateItem);\r\n\r\n    const dateObject = new Date(parsedDate);\r\n\r\n    let y = \"\" + dateObject.getFullYear();\r\n    let m = \"\" + dateObject.getMonth();\r\n    let d = \"\" + dateObject.getDate();\r\n\r\n    if (m.length == 1){\r\n        m = \"0\" + m;\r\n    }\r\n\r\n    if (d.length == 1){\r\n        d = \"0\" + d;\r\n    }\r\n\r\n    return `${y}-${m}-${d}`;\r\n}\r\n\r\nexport const dateParserWithMonth = (dateItem) => {\r\n    const parsedDate = parseInt(dateItem);\r\n\r\n    const dateObject = new Date(parsedDate);\r\n\r\n    let y = \"\" + dateObject.getFullYear();\r\n    let m = mS[dateObject.getMonth()];\r\n    let d = \"\" + dateObject.getDate();\r\n\r\n    if (d.length == 1){\r\n        d = \"0\" + d;\r\n    }\r\n\r\n    return `${d}-${m}-${y}`;\r\n}\r\n\r\nexport const dateParserWithMonth_ISODate = (dateItem) => {\r\n    const parsedDate = Date.parse(dateItem);\r\n\r\n    const dateObject = new Date(parsedDate);\r\n\r\n    let y = \"\" + dateObject.getFullYear();\r\n    let m = mS[dateObject.getMonth()];\r\n    let d = \"\" + dateObject.getDate();\r\n\r\n    if (d.length == 1){\r\n        d = \"0\" + d;\r\n    }\r\n\r\n    return `${d}-${m}-${y}`;\r\n}\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {UPDATE_STUDENT, GET_STUDENTS} from \"../../queries/queries\";\r\n\r\nconst EditStudent = (props) => {\r\n    const {\r\n        className,\r\n        studentItem\r\n      } = props;\r\n\r\n    const [name, setName] = useState(studentItem.name);\r\n    const [address, setAddress] = useState(studentItem.address);\r\n    const [phone_number, setPhoneNumber] = useState(studentItem.phone_number);\r\n    const [dob, setDob] = useState(studentItem.dob);\r\n    const [coursesIDs, setCoursesIDs] = useState(studentItem.coursesIDs);\r\n    const [updateStudent, { data }] = useMutation(UPDATE_STUDENT, {\r\n        update(cache, { data: { updateStudent } }) {\r\n          const { students } = cache.readQuery({ query: GET_STUDENTS })\r\n          cache.writeQuery({\r\n            query: GET_STUDENTS,\r\n            data: { data: { students: students.map(item => {\r\n                if (item.id == updateStudent.id) {\r\n                    return updateStudent;\r\n                } \r\n                return item;\r\n            }) }, },\r\n          });\r\n        }\r\n      });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateStudent({ variables: { studentID: studentItem.id, name, address, dob, phone_number, coursesIDs } });\r\n    setModal(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"warning\" onClick={toggle}>Update</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Update Student</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"dob\">Date of Birth:</Label>\r\n                    <Input type=\"date\" placeholder=\"DOB\" id=\"dob\" name=\"dob\" required value={dob} onChange={e => {\r\n                        setDob(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"phone_number\">Phone Number:</Label>\r\n                    <Input type=\"tel\" placeholder=\"Phone Number\" id=\"phone_number\" name=\"phone_number\" required value={phone_number} onChange={e => {\r\n                        setPhoneNumber(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"address\">Address:</Label>\r\n                    <textarea id=\"address\" name=\"address\" className=\"form-control\" rows=\"5\" placeholder=\"Address\" value={address} onChange={e => {\r\n                        setAddress(e.target.value)\r\n                    }}>\r\n                    </textarea>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Update</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditStudent;","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {UPDATE_TRAINER, GET_TRAINERS} from \"../../queries/queries\";\r\n\r\nconst EditTrainer = (props) => {\r\n    const {\r\n        className,\r\n        trainerItem\r\n      } = props;\r\n\r\n    const [name, setName] = useState(trainerItem.name);\r\n    const [address, setAddress] = useState(trainerItem.address);\r\n    const [phone_number, setPhoneNumber] = useState(trainerItem.phone_number);\r\n    const [dob, setDob] = useState(trainerItem.dob);\r\n    const [topicsIDs, setTopicsIDs] = useState(trainerItem.topicsIDs);\r\n    const [profession, setProfession] = useState(trainerItem.profession);\r\n    const [updateTrainer, { data }] = useMutation(UPDATE_TRAINER, {\r\n        update(cache, { data: { updateTrainer } }) {\r\n          const { trainers } = cache.readQuery({ query: GET_TRAINERS })\r\n          cache.writeQuery({\r\n            query: GET_TRAINERS,\r\n            data: { data: { trainers: trainers.map(item => {\r\n                if (item.id == updateTrainer.id) {\r\n                    return updateTrainer;\r\n                } \r\n                return item;\r\n            }) }, },\r\n          });\r\n        }\r\n      });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateTrainer({ variables: { trainerID: trainerItem.id, name, address, dob, phone_number, topicsIDs, profession } });\r\n    setModal(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"warning\" onClick={toggle}>Update</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Update Trainer</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"profession\">Profession:</Label>\r\n                    <Input type=\"text\" placeholder=\"Profession\" id=\"profession\" name=\"profession\" required value={profession} onChange={e => {\r\n                        setProfession(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"dob\">Date of Birth:</Label>\r\n                    <Input type=\"date\" placeholder=\"DOB\" id=\"dob\" name=\"dob\" required value={dob} onChange={e => {\r\n                        setDob(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"phone_number\">Phone Number:</Label>\r\n                    <Input type=\"tel\" placeholder=\"Phone Number\" id=\"phone_number\" name=\"phone_number\" required value={phone_number} onChange={e => {\r\n                        setPhoneNumber(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"address\">Address:</Label>\r\n                    <textarea id=\"address\" name=\"address\" className=\"form-control\" rows=\"5\" placeholder=\"Address\" value={address} onChange={e => {\r\n                        setAddress(e.target.value)\r\n                    }}>\r\n                    </textarea>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Update</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTrainer;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_USER_BY_ID} from \"../../queries/queries\";\r\nimport {Container} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {dateParserWithMonth_ISODate} from \"../../utils/dateParser\";\r\nimport EditStudent from \"../Student/EditStudent\";\r\nimport EditTrainer from \"../Trainer/EditTrainer\";\r\n\r\nfunction Profile(props) {\r\n    const userID = localStorage.getItem(\"userID\");\r\n    const { loading, error, data } = useQuery(GET_USER_BY_ID, {\r\n        variables: {userID}\r\n    })\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const {role, email, student, trainer} = data.getUserByID;\r\n\r\n    const displayUpdateButtons = () => {\r\n        if (role === \"Admin\") {\r\n            return \"\";\r\n        } else if (role === \"Student\") {\r\n            return <EditStudent studentItem={student}/>\r\n        } else if (role === \"Trainer\") {\r\n            return <EditTrainer trainerItem={trainer}/>\r\n        } \r\n    }\r\n\r\n    const displayProfile = () => {\r\n        if (role === \"Admin\") {\r\n            return (\r\n                <div>\r\n                    \r\n                </div>\r\n            )\r\n        } else if (role === \"Student\") {\r\n            const {name, dob, address, phone_number, courses} = student\r\n            const courseList = courses.length === 0 ? (\r\n                <ul>\r\n                    <li>\r\n                        Nothing to learn\r\n                    </li>\r\n                </ul>\r\n            ) : (\r\n                <ul>\r\n                    {courses.map(courseItem => {\r\n                    return <li key={courseItem.id} >\r\n                                <Link to={`/courses/${courseItem.id}`}>\r\n                                {courseItem.name}\r\n                                </Link>\r\n                            </li>\r\n                    })}\r\n                </ul>\r\n            )\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Name:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{name}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Date of Birth:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{dateParserWithMonth_ISODate(dob)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Address:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{address}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Phone Number:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{phone_number}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Email:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{email}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                        <p><b>Participated Courses:</b></p>\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                        <p>{courseList}</p>\r\n                    </div>\r\n\r\n                    </div>               \r\n                </div>\r\n            )\r\n        } else if (role === \"Trainer\") {\r\n            const {name, dob, address, phone_number, topics, profession} = trainer\r\n            const topicList = topics.length === 0 ? (\r\n                <ul>\r\n                    <li>\r\n                        Nothing to teach\r\n                    </li>\r\n                </ul>\r\n            ) : (\r\n                <ul>\r\n                    {topics.map(topicItem => {\r\n                    return <li key={topicItem.id} >\r\n                                <Link to={`/topics/${topicItem.id}`}>\r\n                                {topicItem.title}\r\n                                </Link>\r\n                            </li>\r\n                    })}\r\n                </ul>\r\n            )\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Name:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{name}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Date of Birth:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth_ISODate(dob)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Address:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{address}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Phone Number:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{phone_number}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Email:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{email}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Profession:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{profession}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Assigned Topics:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{topicList}</p>\r\n                        </div>\r\n\r\n                    </div>               \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Profile</h2>\r\n                <div className=\"box-content\">\r\n                    <h4>Logged in as {email}</h4>\r\n                    <h6 style={{marginBottom: \"30px\"}}>{role}</h6>\r\n                    {displayProfile()}\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Configuration</h2>\r\n                <div className=\"box-content util-box align-items-center\">\r\n                    <Link to=\"/change-password\" className=\"btn btn-primary\">Change Password</Link>\r\n                    {displayUpdateButtons()}\r\n                    <Link to=\"/logout\" className=\"btn btn-danger\">Logout</Link>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {UPDATE_COURSE, GET_COURSES} from \"../../queries/queries\";\r\n\r\nconst EditCourse = (props) => {\r\n    const {courseItem} = props;\r\n    const [name, setName] = useState(courseItem.name);\r\n    const [updateCourse, { data }] = useMutation(UPDATE_COURSE, {\r\n        update(cache, { data: { updateCourse } }) {\r\n          const { courses } = cache.readQuery({ query: GET_COURSES })\r\n          cache.writeQuery({\r\n            query: GET_COURSES,\r\n            data: { courses: courses.map(item => {\r\n                if (item.id == updateCourse.id) {\r\n                    return updateCourse;\r\n                } \r\n                return item;\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCourse({ variables: { name, courseID: courseItem.id } });\r\n    setModal(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"warning\" onClick={toggle}>Update</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Update Course</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Course Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Course Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Update</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCourse;","import React from 'react';\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {DELETE_COURSE, GET_COURSES} from \"../../queries/queries\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Button } from \"reactstrap\";\r\nimport EditCourse from \"./EditCourse\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction CourseItem(props) {\r\n    const {courseItem} = props;\r\n    const {name, created_date, id} = props.courseItem;\r\n\r\n    const [deleteCourse, { data }] = useMutation(DELETE_COURSE, {\r\n        update(cache, { data: { deleteCourse } }) {\r\n          const { courses } = cache.readQuery({ query: GET_COURSES })\r\n          cache.writeQuery({\r\n            query: GET_COURSES,\r\n            data: { courses: courses.filter(item => {\r\n                return item.id !== deleteCourse.id\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n      const onDelete = () => {\r\n        deleteCourse({ variables: { courseID: id } })\r\n      }\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/courses/${id}`}>{name}</Link></td>\r\n            <td>{dateParserWithMonth(created_date)}</td>\r\n            <td className=\"utils\">\r\n                <EditCourse courseItem={courseItem}/>\r\n                <Button onClick={onDelete} color=\"danger\">Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CourseItem\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {ADD_COURSE, GET_COURSES} from \"../../queries/queries\";\r\n\r\nconst AddCourse = (props) => {\r\n  const {\r\n    className\r\n  } = props;\r\n    const [name, setName] = useState(\"\");\r\n    const [addCourse, { data }] = useMutation(ADD_COURSE, {\r\n        update(cache, { data: { addCourse } }) {\r\n          console.log(addCourse);\r\n          const { courses } = cache.readQuery({ query: GET_COURSES })\r\n          cache.writeQuery({\r\n            query: GET_COURSES,\r\n            data: { courses: courses.concat([addCourse]) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await addCourse({ variables: { name } });\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Add Course</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Create New Course</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Course Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Course Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Create</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCourse;","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport {GET_STUDENTS, GET_COURSES, ASSIGN_STUDENT_TO_COURSE} from \"../../queries/queries\";\r\n\r\nconst AssignStudentToCourse = (props) => {\r\n    const courseData = useQuery(GET_COURSES)\r\n    const studentData = useQuery(GET_STUDENTS)\r\n    const [assignStudentToCourse, assignData] = useMutation(ASSIGN_STUDENT_TO_COURSE, {\r\n      update(cache, { data: { assignStudentToCourse } }) {\r\n        const { students } = cache.readQuery({ query: GET_STUDENTS })\r\n        cache.writeQuery({\r\n          query: GET_STUDENTS,\r\n          data: { students: students.map(item => {\r\n            if (item.id === assignStudentToCourse.id) {\r\n                return assignStudentToCourse;\r\n            } \r\n            return item;\r\n        }) },\r\n        });\r\n      }\r\n    })\r\n    const [courseID, setCourseID] = useState(\"\");\r\n    const [studentID, setStudentID] = useState(\"\");\r\n    \r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const displayCourseSelect = () => {\r\n    const { loading, error, data } = courseData;\r\n\r\n    if (loading || studentData.loading) return <option disabled>Loading...</option>;\r\n\r\n    if (error || studentData.error) return <option disabled>{error.message}</option>;\r\n\r\n    let selectedStudent;\r\n    let currentCourses = data.courses;\r\n\r\n    if (studentID){\r\n      selectedStudent = studentData.data.students.filter(studentItem => {\r\n        return studentItem.id === studentID\r\n      })[0];\r\n\r\n      currentCourses = currentCourses.filter(courseItem => {\r\n        return !selectedStudent.coursesIDs.includes(courseItem.id)\r\n      })\r\n    }\r\n\r\n    if (currentCourses.length === 0){\r\n      return <option disabled key={\"LOL3\"}>\r\n            No student has been specified or this student has participated in all available courses\r\n          </option> \r\n    }\r\n\r\n    return currentCourses.map(courseItem => {\r\n          return <option value={courseItem.id} key={courseItem.id}>\r\n            {courseItem.name}\r\n          </option>\r\n        })\r\n  }\r\n\r\n  const displayStudentSelect = () => {\r\n    const { loading, error, data } = studentData;\r\n\r\n    if (loading) return <option disabled>Loading...</option>;\r\n\r\n    if (error) return <option disabled>{error.message}</option>;\r\n\r\n    let currentStudents = data.students;\r\n\r\n    return currentStudents.map(studentItem => {\r\n          return <option value={studentItem.id} key={studentItem.id}>\r\n            {studentItem.name}\r\n          </option>\r\n        })\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await assignStudentToCourse({variables: {courseID, studentID}})\r\n    setCourseID(\"\");\r\n    setStudentID(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Assign Student To Course</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Assign Student To Course</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n            <FormGroup>\r\n              <Label htmlFor=\"studentID\">Student:</Label>\r\n              <select className=\"custom-select\" id=\"studentID\" name=\"studentID\" defaultValue={\"\"} value={studentID} onChange={(e) => {\r\n                setStudentID(e.target.value)\r\n              }}>\r\n                <option value={\"\"} disabled>--Student--</option>\r\n              {displayStudentSelect()}\r\n              </select>\r\n            </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"courseID\">Course:</Label>\r\n                    <select className=\"custom-select\" id=\"courseID\" name=\"courseID\" defaultValue={\"\"} value={courseID} onChange={(e) => {\r\n                      setCourseID(e.target.value)\r\n                    }}>\r\n                      <option value={\"\"} disabled>--Course--</option>\r\n                    {displayCourseSelect()}\r\n                    </select>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Assign</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignStudentToCourse;","import React, {useEffect} from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_COURSES} from \"../../queries/queries\";\r\nimport CourseItem from \"./CourseItem\";\r\nimport AddCourse from \"./AddCourse\";\r\nimport AssignStudentToCourse from \"./AssignStudentToCourse\";\r\nimport {Table, Container} from \"reactstrap\";\r\nimport MessageAlert from \"../Partial/MessageAlert\";\r\n\r\nfunction CourseList() {\r\n    const { loading, error, data } = useQuery(GET_COURSES);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const displayCourseItems = () => {\r\n        return data.courses.map(courseItem => {\r\n            return <CourseItem key={courseItem.id} courseItem={courseItem}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    <AddCourse/>\r\n                    <AssignStudentToCourse/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"box table-container\">\r\n                <h2 className=\"box-title\">Data</h2>\r\n                <div className=\"box-content\">\r\n                    <Table hover>\r\n                        <thead>\r\n                            <th>Name</th>\r\n                            <th>Created Date</th>\r\n                            <th>Utilities</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayCourseItems()}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_COURSE_BY_ID, GET_COURSES, GET_USER_BY_ID} from \"../../queries/queries\";\r\nimport { Container } from 'reactstrap';\r\nimport EditCourse from \"./EditCourse\";\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction CourseDetails(props) {\r\n    const courseID = props.match.params.courseID;\r\n    const userID = localStorage.getItem(\"userID\");\r\n    const courseData = useQuery(GET_COURSES);\r\n    const userData = useQuery(GET_USER_BY_ID, {\r\n        variables: {userID}\r\n    });\r\n    const { loading, error, data } = useQuery(GET_COURSE_BY_ID, {\r\n        variables: {courseID},\r\n    })\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const courseItem = data.getCourseByID;\r\n    const {name, created_date, topics, participated_students} = courseItem;\r\n    let assignedTrainers = [];\r\n\r\n    const dipslayTopicList  = () => {\r\n        if (topics.length === 0){\r\n            return <li key={\"LOL\"}>No topic has assigned to this course</li>\r\n        } else {\r\n            return topics.map(topicItem => {\r\n                return <li key={topicItem.id}><Link to={`/topics/${topicItem.id}`}>{topicItem.title}</Link></li>\r\n            })\r\n        }\r\n    }\r\n    \r\n    const displayAssignedTrainers = () => {\r\n        topics.forEach(topicItem => {\r\n            const {assigned_trainers} = topicItem;\r\n            assigned_trainers.forEach(trainerItem => {\r\n                if (!assignedTrainers.includes(trainerItem.name)){\r\n                    assignedTrainers.push(trainerItem.name);\r\n                }\r\n            })\r\n        });\r\n        if (assignedTrainers.length === 0){\r\n            return <li key={\"LOL1\"}>No trainer has been assigned</li>\r\n        } else {\r\n            return assignedTrainers.map((trainerItem, index) => {\r\n                return <li key={`${name}-${index}`}>{trainerItem}</li>\r\n            })\r\n        }\r\n    }\r\n\r\n    const displayParticipatedStudents = () => {\r\n        console.log(participated_students)\r\n        if (participated_students.length === 0){\r\n            return <li key={\"LOL2\"}>No student has participated in this course</li>\r\n        } else {\r\n            return participated_students.map(studentItem => {\r\n                return <li key={studentItem.id}>{studentItem.name}</li>\r\n            })\r\n        }\r\n    }\r\n\r\n    const displayUtilBox = () => {\r\n        const {role} = userData.data.getUserByID;\r\n        if (userData.loading) return <p>Loading...</p>;\r\n        if (userData.error) return <p>{userData.error.message}</p>;\r\n        if (role === \"Admin\"){\r\n            return (\r\n                <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    {/*<EditCourse courseItem={courseItem}/>*/}\r\n                    <Link to=\"/courses\" className=\"btn btn-dark\">Back To List</Link>\r\n                </div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            \r\n                {displayUtilBox()}\r\n\r\n                <div className=\"box\">\r\n                    <h2 className=\"box-title\">Data</h2>\r\n                    <div className=\"box-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Name:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{name}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Created Date:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth(created_date)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Topics:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {dipslayTopicList()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Assigned Trainers:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {displayAssignedTrainers()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Participated Students:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {displayParticipatedStudents()}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CourseDetails\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport {UPDATE_TOPIC, GET_COURSES, GET_TOPICS} from \"../../queries/queries\";\r\n\r\nconst EditTopic = (props) => {\r\n    const {topicItem} = props\r\n    const [title, setTitle] = useState(topicItem.title);\r\n    const [courseID, setCourseID] = useState(topicItem.courseID);\r\n    const courseQueryObject = useQuery(GET_COURSES);\r\n    let {loading, error} = courseQueryObject;\r\n    let courseData = courseQueryObject.data;\r\n    const [updateTopic, { data }] = useMutation(UPDATE_TOPIC, {\r\n        update(cache, { data: { updateTopic } }) {\r\n          const { topics } = cache.readQuery({ query: GET_TOPICS })\r\n          cache.writeQuery({\r\n            query: GET_TOPICS,\r\n            data: { topics: topics.map(item => {\r\n                if (item.id == updateTopic.id) {\r\n                    return updateTopic;\r\n                } \r\n                return item;\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateTopic({ variables: { topicID: topicItem.id, title, courseID } });\r\n    setModal(false);\r\n  }\r\n\r\n  const displayCourseOptions = (e) => {\r\n    if (loading) {\r\n        return <option>Loading</option>\r\n    } else if (error) {\r\n        return <option>Error</option>\r\n    } else {\r\n        return courseData.courses.map(item => {\r\n            return <option value={item.id}>{item.name}</option>\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"warning\" onClick={toggle}>Update</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Update Topic</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Topic Title:</Label>\r\n                    <Input type=\"text\" placeholder=\"Topic Title\" id=\"title\" name=\"title\" required value={title} onChange={e => {\r\n                        setTitle(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"courseID\">Course:</Label>\r\n                    <select className=\"custom-select\" id=\"courseID\" name=\"courseID\" defaultValue={courseID} value={courseID} onChange={(e) => {\r\n                        setCourseID(e.target.value)\r\n                    }} required>\r\n                        <option disabled value={\"\"}>--Course--</option>\r\n                        {displayCourseOptions()}\r\n                    </select>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Update</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTopic;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_TOPIC_BY_ID, GET_TOPICS, GET_USER_BY_ID} from \"../../queries/queries\";\r\nimport { Container } from 'reactstrap';\r\nimport EditTopic from \"./EditTopic\";\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction TopicDetails(props) {\r\n    const topicID = props.match.params.topicID;\r\n    const userID = localStorage.getItem(\"userID\");\r\n    const topicData = useQuery(GET_TOPICS);\r\n    const userData = useQuery(GET_USER_BY_ID, {\r\n        variables: {userID}\r\n    });\r\n    const { loading, error, data } = useQuery(GET_TOPIC_BY_ID, {\r\n        variables: {topicID}\r\n    })\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const topicItem = data.getTopicByID;\r\n    const {title, created_date, course, assigned_trainers} = topicItem;\r\n    console.log(topicItem)\r\n\r\n    const displayAssignedTrainers = () => {\r\n        if (assigned_trainers.length === 0){\r\n            return <li key={\"LOL2\"}>No trainer has been assigned to this course</li>\r\n        } else {\r\n            return assigned_trainers.map(trainerItem => {\r\n                return <li key={trainerItem.id}>{trainerItem.name}</li>\r\n            })\r\n        }\r\n    }\r\n\r\n    const displayUtilBox = () => {\r\n        const {role} = userData.data.getUserByID;\r\n        if (userData.loading) return <p>Loading...</p>;\r\n        if (userData.error) return <p>{userData.error.message}</p>;\r\n        if (role === \"Admin\"){\r\n            return (\r\n                <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    {/*<EditTopic topicItem={topicItem}/>*/}\r\n                    <Link to=\"/topics\" className=\"btn btn-dark\">Back To List</Link>\r\n                </div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            \r\n            {displayUtilBox()}\r\n\r\n                <div className=\"box\">\r\n                    <h2 className=\"box-title\">Data</h2>\r\n                    <div className=\"box-content\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Name:</b></p>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{title}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Created Date:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth(created_date)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Course:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p><Link to={`/courses/${course.id}`}>{course.name}</Link></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Assigned Trainers:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {displayAssignedTrainers()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopicDetails\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_STUDENT_BY_ID, GET_STUDENTS} from \"../../queries/queries\";\r\nimport { Container } from 'reactstrap';\r\nimport EditStudent from \"./EditStudent\";\r\nimport {dateParserWithMonth_ISODate, dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction StudentDetails(props) {\r\n    const studentID = props.match.params.studentID;\r\n    const studentData = useQuery(GET_STUDENTS);\r\n    const { loading, error, data } = useQuery(GET_STUDENT_BY_ID, {\r\n        variables: {studentID}\r\n    })\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const studentItem = data.getStudentByID;\r\n    const {name, created_date, dob, address, phone_number, courses, user} = studentItem;\r\n\r\n    const dipslayCourseList = () => {\r\n        if (courses.length === 0){\r\n            return <li key={\"LOL\"}>No course has been participated by this student</li>\r\n        } else {\r\n            return courses.map(courseItem => {\r\n                return <li key={courseItem.id}><Link to={`/courses/${courseItem.id}`}>{courseItem.name}</Link></li>\r\n            })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            \r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    {/*<EditStudent studentItem={studentItem}/>*/}\r\n                    <Link to=\"/students\" className=\"btn btn-dark\">Back To List</Link>\r\n                </div>\r\n            </div>\r\n                <div className=\"box\">\r\n                    <h2 className=\"box-title\">Data</h2>\r\n                    <div className=\"box-content\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Name:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{name}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Date of Birth:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth_ISODate(dob)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Address:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{address}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Phone Number:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{phone_number}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Email:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p><a href={`mailto:${user.email}`}>{user.email}</a></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Created Date:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth(created_date)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Participated Courses:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {dipslayCourseList()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StudentDetails\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_TRAINER_BY_ID, GET_TRAINERS} from \"../../queries/queries\";\r\nimport { Container } from 'reactstrap';\r\nimport EditTrainer from \"./EditTrainer\";\r\nimport {dateParserWithMonth_ISODate, dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction TrainerDetails(props) {\r\n    const trainerID = props.match.params.trainerID;\r\n    const trainerData = useQuery(GET_TRAINERS);\r\n    const { loading, error, data } = useQuery(GET_TRAINER_BY_ID, {\r\n        variables: {trainerID}\r\n    })\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const trainerItem = data.getTrainerByID;\r\n    const {name, created_date, dob, address, phone_number, profession, topics, user} = trainerItem;\r\n    console.log(trainerItem)\r\n\r\n    const dipslayTopicList = () => {\r\n        if (topics.length === 0){\r\n            return <li key={\"LOL\"}>No course has been participated by this student</li>\r\n        } else {\r\n            return topics.map(topicItem => {\r\n                return <li key={topicItem.id}><Link to={`/topics/${topicItem.id}`}>{topicItem.title}</Link></li>\r\n            })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            \r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    {/*<EditTrainer trainerItem={trainerItem}/>*/}\r\n                    <Link to=\"/trainers\" className=\"btn btn-dark\">Back To List</Link>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"box\">\r\n                    <h2 className=\"box-title\">Data</h2>\r\n                    <div className=\"box-content\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Name:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{name}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Profession:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{profession}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Date of Birth:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth_ISODate(dob)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Address:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{address}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Phone Number:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{phone_number}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Email:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p><a href={`mailto:${user.email}`}>{user.email}</a></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Created Date:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <p>{dateParserWithMonth(created_date)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 details-title\">\r\n                            <p><b>Assigned Topics:</b></p>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-6 col-sm-6 details-data\">\r\n                            <ul>\r\n                                {dipslayTopicList()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TrainerDetails\r\n","import React, {useState} from 'react';\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport {CHANGE_PASWORD} from \"../../queries/queries\";\r\nimport {Form, FormGroup, Input, Button, Label, Container} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ChangePassword(props) {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [change_password, { data }] = useMutation(CHANGE_PASWORD);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const userID = localStorage.getItem(\"userID\");\r\n        change_password({\r\n            variables: {userID, oldPassword, newPassword}\r\n        })\r\n        props.history.push(\"/logout\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Change Password</h2>\r\n                <div className=\"box-content\">\r\n                    <Form onSubmit={onSubmit}>\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"oldPassword\">Old Password:</Label>\r\n                            <Input type=\"password\" placeholder=\"Old Password\" id=\"oldPassword\" name=\"oldPassword\" required value={oldPassword} onChange={e => {\r\n                                setOldPassword(e.target.value)\r\n                            }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"newPassword\">New Password:</Label>\r\n                            <Input type=\"password\" placeholder=\"New Password\" id=\"newPassword\" name=\"newPassword\" required value={newPassword} onChange={e => {\r\n                                setNewPassword(e.target.value)\r\n                            }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Button color=\"dark\" block type=\"submit\">Change Password</Button>\r\n                            <Link to=\"/profile\" className=\"btn btn-info btn-block mt-2\">Back To Profile</Link>\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react';\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\nimport {DELETE_TOPIC, GET_TOPICS} from \"../../queries/queries\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Button } from \"reactstrap\";\r\nimport EditTopic from \"./EditTopic\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction TopicItem(props) {\r\n    const {topicItem} = props;\r\n    const {title, course, created_date, id} = props.topicItem;\r\n    const {name} = course;\r\n\r\n    const [deleteTopic, { data }] = useMutation(DELETE_TOPIC, {\r\n        update(cache, { data: { deleteTopic } }) {\r\n          const { topics } = cache.readQuery({ query: GET_TOPICS })\r\n          cache.writeQuery({\r\n            query: GET_TOPICS,\r\n            data: { topics: topics.filter(item => {\r\n                return item.id !== deleteTopic.id\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n      const onDelete = () => {\r\n        deleteTopic({ variables: { topicID: id } })\r\n      }\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/topics/${id}`}>{title}</Link></td>\r\n            <td>{name}</td>\r\n            <td>{dateParserWithMonth(created_date)}</td>\r\n            <td className=\"utils\">\r\n                <EditTopic topicItem={topicItem}/>\r\n                <Button onClick={onDelete} color=\"danger\">Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TopicItem\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport {ADD_TOPIC, GET_COURSES, GET_TOPICS} from \"../../queries/queries\";\r\n\r\nconst AddTopic = (props) => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [courseID, setCourseID] = useState(\"\");\r\n    const courseQueryObject = useQuery(GET_COURSES);\r\n    let {loading, error} = courseQueryObject;\r\n    let courseData = courseQueryObject.data;\r\n    const [addTopic, { data }] = useMutation(ADD_TOPIC, {\r\n        update(cache, { data: { addTopic } }) {\r\n          const { topics } = cache.readQuery({ query: GET_TOPICS })\r\n          cache.writeQuery({\r\n            query: GET_TOPICS,\r\n            data: { topics: topics.concat([addTopic]) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTopic({ variables: { title, courseID } });\r\n    setTitle(\"\");\r\n  }\r\n\r\n  const displayCourseOptions = (e) => {\r\n    if (loading) {\r\n        return <option>Loading</option>\r\n    } else if (error) {\r\n        return <option>Error</option>\r\n    } else {\r\n        return courseData.courses.map(item => {\r\n            return <option value={item.id}>{item.name}</option>\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Add Topic</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Create New Topic</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Topic Title:</Label>\r\n                    <Input type=\"text\" placeholder=\"Topic Title\" id=\"title\" name=\"title\" required value={title} onChange={e => {\r\n                        setTitle(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"courseID\">Course:</Label>\r\n                    <select className=\"custom-select\" id=\"courseID\" name=\"courseID\" defaultValue={\"\"} value={courseID} onChange={(e) => {\r\n                        setCourseID(e.target.value)\r\n                    }} required>\r\n                        <option disabled value={\"\"}>--Course--</option>\r\n                        {displayCourseOptions()}\r\n                    </select>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Create</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTopic;","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport {GET_COURSES, GET_TOPICS, GET_TRAINERS, ASSIGN_TRAINER_TO_TOPIC} from \"../../queries/queries\";\r\n\r\nconst AssignTrainerToTopic = (props) => {\r\n    const courseData = useQuery(GET_COURSES)\r\n    const trainerData = useQuery(GET_TRAINERS)\r\n    const topicData = useQuery(GET_TOPICS)\r\n    const [assignTrainerToTopic, assignData] = useMutation(ASSIGN_TRAINER_TO_TOPIC, {\r\n        update(cache, { data: { assignTrainerToTopic } }) {\r\n            const { trainers } = cache.readQuery({ query: GET_TRAINERS })\r\n            cache.writeQuery({\r\n              query: GET_TRAINERS,\r\n              data: { students: trainers.map(item => {\r\n                if (item.id === assignTrainerToTopic.id) {\r\n                    return assignTrainerToTopic;\r\n                } \r\n                return item;\r\n            }) },\r\n            });\r\n          }\r\n    })\r\n    const [courseID, setCourseID] = useState(\"\");\r\n    const [trainerID, setTrainerID] = useState(\"\");\r\n    const [topicID, setTopicID] = useState(\"\");\r\n    \r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const displayCourseSelect = () => {\r\n    const { loading, error, data } = courseData;\r\n\r\n    if (loading) return <option disabled>Loading...</option>;\r\n\r\n    if (error) return <option disabled>{error.message}</option>;\r\n\r\n    let currentCourses = data.courses;\r\n\r\n    return currentCourses.map(courseItem => {\r\n          return <option value={courseItem.id} key={courseItem.id}>\r\n            {courseItem.name}\r\n          </option>\r\n        })\r\n  }\r\n\r\n  const displayTrainerSelect = () => {\r\n    const { loading, error, data } = trainerData;\r\n\r\n    if (loading) return <option disabled>Loading...</option>;\r\n\r\n    if (error) return <option disabled>{error.message}</option>;\r\n\r\n    let currentTrainers = data.trainers;\r\n\r\n    return currentTrainers.map(trainerItem => {\r\n          return <option value={trainerItem.id} key={trainerItem.id}>\r\n            {trainerItem.name}\r\n          </option>\r\n        })\r\n  }\r\n\r\n  const displayTopicSelect = () => {\r\n    const { loading, error, data } = topicData;\r\n\r\n    if (loading || trainerData.loading) return <option disabled>Loading...</option>;\r\n\r\n    if (error || trainerData.error) return <option disabled>{error.message}</option>;\r\n\r\n    \r\n    let currentTopics = data.topics;\r\n    currentTopics = currentTopics.filter(topicItem => {\r\n        return topicItem.courseID === courseID;\r\n    })\r\n\r\n    if (trainerID) {\r\n        let selectedTrainer = trainerData.data.trainers.filter(trainerItem => {\r\n            return trainerItem.id === trainerID;\r\n        })[0];\r\n        currentTopics = currentTopics.filter(topicItem => {\r\n            return !selectedTrainer.topicsIDs.includes(topicItem.id)\r\n        })\r\n    }\r\n\r\n    if (currentTopics.length === 0) return <option disabled>There is no topics related to the selected course or this trainer has been assign to all the topics in this course</option>;\r\n\r\n    return currentTopics.map(topicItem => {\r\n          return <option value={topicItem.id} key={topicItem.id}>\r\n            {topicItem.title}\r\n          </option>\r\n        })\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    assignTrainerToTopic({variables: {topicID, trainerID}})\r\n    setTrainerID(\"\");\r\n    setCourseID(\"\");\r\n    setTopicID(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Assign Trainer To Topic</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Assign Trainer To Topic</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n            <FormGroup>\r\n                <Label htmlFor=\"trainerID\">Trainer:</Label>\r\n                <select className=\"custom-select\" id=\"trainerID\" name=\"trainerID\" defaultValue={\"\"} value={trainerID} onChange={(e) => {\r\n                setTrainerID(e.target.value)\r\n                }}>\r\n                <option value={\"\"} disabled>--Trainer--</option>\r\n                {displayTrainerSelect()}\r\n                </select>\r\n            </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"courseID\">Course:</Label>\r\n                    <select className=\"custom-select\" id=\"courseID\" name=\"courseID\" defaultValue={\"\"} value={courseID} onChange={(e) => {\r\n                      setCourseID(e.target.value)\r\n                    }}>\r\n                      <option value={\"\"} disabled>--Course--</option>\r\n                    {displayCourseSelect()}\r\n                    </select>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"topicID\">Topic:</Label>\r\n                    <select className=\"custom-select\" id=\"topicID\" name=\"topicID\" defaultValue={\"\"} value={topicID} onChange={(e) => {\r\n                      setTopicID(e.target.value)\r\n                    }}>\r\n                      <option value={\"\"} disabled>--Topic--</option>\r\n                    {displayTopicSelect()}\r\n                    </select>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Assign</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignTrainerToTopic;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_TOPICS} from \"../../queries/queries\";\r\nimport TopicItem from \"./TopicItem\";\r\nimport AddTopic from \"./AddTopic\";\r\nimport AssignTrainerToTopic from \"./AssignTrainerToTopic\"\r\nimport {Table, Container} from \"reactstrap\";\r\n\r\nfunction TopicList() {\r\n    const { loading, error, data } = useQuery(GET_TOPICS)\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const displayTopicItems = () => {\r\n        console.log(data);\r\n        return data.topics.map(topicItem => {\r\n            return <TopicItem key={topicItem.id} topicItem={topicItem}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content util-box\">\r\n                    <AddTopic/>\r\n                    <AssignTrainerToTopic/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"box table-container\">\r\n                <h2 className=\"box-title\">Data</h2>\r\n                <div className=\"box-content\">\r\n                    <Table hover>\r\n                        <thead>\r\n                            <th>Title</th>\r\n                            <th>Course</th>\r\n                            <th>Created Date</th>\r\n                            <th>Utilities</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayTopicItems()}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopicList\r\n","import React from 'react';\r\nimport {dateParserWithMonth_ISODate} from \"../../utils/dateParser\";\r\nimport {DELETE_STUDENT, GET_STUDENTS} from \"../../queries/queries\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Button } from \"reactstrap\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction StudentItem(props) {\r\n    const {studentItem} = props;\r\n    const {name, dob, address, phone_number, created_date, id, user} = studentItem;\r\n    const {email} = user;\r\n\r\n    const [deleteStudent, { data }] = useMutation(DELETE_STUDENT, {\r\n        update(cache, { data: { deleteStudent } }) {\r\n          const { students } = cache.readQuery({ query: GET_STUDENTS })\r\n          cache.writeQuery({\r\n            query: GET_STUDENTS,\r\n            data: { students: students.filter(item => {\r\n                return item.id !== deleteStudent.id\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n      const onDelete = () => {\r\n        deleteStudent({ variables: { studentID: id } })\r\n      }\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/students/${id}`}>{name}</Link></td>\r\n            <td>{dateParserWithMonth_ISODate(dob)}</td>\r\n            <td>{phone_number}</td>\r\n            <td><a href={`mailto:${email}`}>{email}</a></td>\r\n            {/*<td>{dateParserWithMonth(created_date)}</td>*/}\r\n            <td className=\"utils\">\r\n                <EditStudent studentItem={studentItem}/>\r\n                <Button onClick={onDelete} color=\"danger\">Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default StudentItem\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {ADD_STUDENT, GET_STUDENTS} from \"../../queries/queries\";\r\n\r\nconst AddStudent = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phone_number, setPhoneNumber] = useState(\"\");\r\n    const [dob, setDob] = useState(\"\");\r\n    const [coursesIDs, setCoursesIDs] = useState([]);\r\n    const [addStudent, { data }] = useMutation(ADD_STUDENT, {\r\n        update(cache, { data: { addStudent } }) {\r\n          const { students } = cache.readQuery({ query: GET_STUDENTS })\r\n          cache.writeQuery({\r\n            query: GET_STUDENTS,\r\n            data: { students: students.concat([addStudent]) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addStudent({ variables: { name, email, address, password, dob, phone_number, coursesIDs } });\r\n    resetValue();\r\n    setModal(false);\r\n  }\r\n\r\n  const resetValue = () => {\r\n    setName(\"\")\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n    setAddress(\"\")\r\n    setPhoneNumber(\"\")\r\n    setDob(\"\")\r\n    setCoursesIDs([])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Add Student</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Create New Student</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"dob\">Date of Birth:</Label>\r\n                    <Input type=\"date\" placeholder=\"DOB\" id=\"dob\" name=\"dob\" required value={dob} onChange={e => {\r\n                        setDob(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"phone_number\">Phone Number:</Label>\r\n                    <Input type=\"tel\" placeholder=\"Phone Number\" id=\"phone_number\" name=\"phone_number\" required value={phone_number} onChange={e => {\r\n                        setPhoneNumber(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"address\">Address:</Label>\r\n                    <textarea id=\"address\" name=\"address\" className=\"form-control\" rows=\"5\" placeholder=\"Address\" value={address} onChange={e => {\r\n                        setAddress(e.target.value)\r\n                    }}>\r\n                    </textarea>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"email\">Email:</Label>\r\n                    <Input type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" required value={email} onChange={e => {\r\n                        setEmail(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password:</Label>\r\n                    <Input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" required value={password} onChange={e => {\r\n                        setPassword(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Create</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddStudent;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_STUDENTS} from \"../../queries/queries\";\r\nimport StudentItem from \"./StudentItem\";\r\nimport AddStudent from \"./AddStudent\";\r\nimport {Table, Container} from \"reactstrap\";\r\n\r\nfunction StudentList() {\r\n    const { loading, error, data } = useQuery(GET_STUDENTS)\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const displayStudentItems = () => {\r\n        return data.students.map(studentItem => {\r\n            return <StudentItem key={studentItem.id} studentItem={studentItem}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content\">\r\n                    <AddStudent/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"box table-container\">\r\n                <h2 className=\"box-title\">Data</h2>\r\n                <div className=\"box-content\">\r\n                    <Table hover>\r\n                        <thead>\r\n                            <th>Name</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Email</th>\r\n                            {/*<th>Created Date</th>*/}\r\n                            <th>Utilities</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayStudentItems()}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StudentList\r\n","import React from 'react';\r\nimport {dateParserWithMonth_ISODate} from \"../../utils/dateParser\";\r\nimport {DELETE_TRAINER, GET_TRAINERS} from \"../../queries/queries\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Button } from \"reactstrap\";\r\nimport EditTrainer from \"./EditTrainer\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction TrainerItem(props) {\r\n    const {trainerItem} = props;\r\n    const {name, dob, address, phone_number, created_date, id, user} = trainerItem;\r\n    const {email} = user;\r\n\r\n    const [deleteTrainer, { data }] = useMutation(DELETE_TRAINER, {\r\n        update(cache, { data: { deleteTrainer } }) {\r\n          const { trainers } = cache.readQuery({ query: GET_TRAINERS })\r\n          cache.writeQuery({\r\n            query: GET_TRAINERS,\r\n            data: { trainers: trainers.filter(item => {\r\n                return item.id !== deleteTrainer.id\r\n            }) },\r\n          });\r\n        }\r\n      });\r\n\r\n      const onDelete = () => {\r\n        deleteTrainer({ variables: { trainerID: id } })\r\n      }\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/trainers/${id}`}>{name}</Link></td>\r\n            <td>{dateParserWithMonth_ISODate(dob)}</td>\r\n            <td>{phone_number}</td>\r\n            <td><a href={`mailto:${email}`}>{email}</a></td>\r\n            {/*<td>{dateParserWithMonth(created_date)}</td>*/}\r\n            <td className=\"utils\">\r\n                <EditTrainer trainerItem={trainerItem}/>\r\n                <Button onClick={onDelete} color=\"danger\">Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TrainerItem\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {ADD_TRAINER, GET_TRAINERS} from \"../../queries/queries\";\r\n\r\nconst AddTrainer = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phone_number, setPhoneNumber] = useState(\"\");\r\n    const [dob, setDob] = useState(\"\");\r\n    const [profession, setProfession] = useState(\"\");\r\n    const [topicsIDs, setTopicsIDs] = useState([]);\r\n    const [addTrainer, { data }] = useMutation(ADD_TRAINER, {\r\n        update(cache, { data: { addTrainer } }) {\r\n          const { trainers } = cache.readQuery({ query: GET_TRAINERS })\r\n          cache.writeQuery({\r\n            query: GET_TRAINERS,\r\n            data: { trainers: trainers.concat([addTrainer]) },\r\n          });\r\n        }\r\n      });\r\n\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTrainer({ variables: { name, email, address, password, dob, phone_number, topicsIDs, profession } });\r\n    resetValue();\r\n    setModal(false);\r\n  }\r\n\r\n  const resetValue = () => {\r\n    setName(\"\")\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n    setProfession(\"\")\r\n    setAddress(\"\")\r\n    setPhoneNumber(\"\")\r\n    setDob(\"\")\r\n    setTopicsIDs([])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" onClick={toggle}>Add Trainer</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Create New Trainer</ModalHeader>\r\n        <ModalBody>\r\n        \r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Name:</Label>\r\n                    <Input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" required value={name} onChange={e => {\r\n                        setName(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"profession\">Profession:</Label>\r\n                    <Input type=\"text\" placeholder=\"Profession\" id=\"profession\" name=\"profession\" required value={profession} onChange={e => {\r\n                        setProfession(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"dob\">Date of Birth:</Label>\r\n                    <Input type=\"date\" placeholder=\"DOB\" id=\"dob\" name=\"dob\" required value={dob} onChange={e => {\r\n                        setDob(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"phone_number\">Phone Number:</Label>\r\n                    <Input type=\"tel\" placeholder=\"Phone Number\" id=\"phone_number\" name=\"phone_number\" required value={phone_number} onChange={e => {\r\n                        setPhoneNumber(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"address\">Address:</Label>\r\n                    <textarea id=\"address\" name=\"address\" className=\"form-control\" rows=\"5\" placeholder=\"Address\" value={address} onChange={e => {\r\n                        setAddress(e.target.value)\r\n                    }}>\r\n                    </textarea>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"email\">Email:</Label>\r\n                    <Input type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" required value={email} onChange={e => {\r\n                        setEmail(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password:</Label>\r\n                    <Input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" required value={password} onChange={e => {\r\n                        setPassword(e.target.value)\r\n                    }}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"dark\" block type=\"submit\">Create</Button>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTrainer;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {GET_TRAINERS} from \"../../queries/queries\";\r\nimport TrainerItem from \"./TrainerItem\";\r\nimport AddTrainer from \"./AddTrainer\";\r\nimport {Table, Container} from \"reactstrap\";\r\n\r\nfunction TrainerList() {\r\n    const { loading, error, data } = useQuery(GET_TRAINERS)\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const displayTrainerItems = () => {\r\n        return data.trainers.map(trainerItem => {\r\n            return <TrainerItem key={trainerItem.id} trainerItem={trainerItem}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <div className=\"box\">\r\n                <h2 className=\"box-title\">Utilities</h2>\r\n                <div className=\"box-content\">\r\n                    <AddTrainer/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"box table-container\">\r\n                <h2 className=\"box-title\">Data</h2>\r\n                <div className=\"box-content\">\r\n                    <Table hover>\r\n                        <thead>\r\n                            <th>Name</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Email</th>\r\n                            {/*<th>Created Date</th>*/}\r\n                            <th>Utilities</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayTrainerItems()}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TrainerList\r\n","import React from 'react';\r\nimport client from \"../../config/client\";\r\n\r\nfunction Logout(props) {\r\n    const clearStore = async () => {\r\n        localStorage.removeItem(\"userID\");\r\n        await client.clearStore();\r\n        props.history.push(\"/\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {clearStore()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from \"./config/client\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport SideNav from \"./components/Partial/SideNav\";\nimport TopNav from \"./components/Partial/TopNav\";\nimport Login from \"./components/User/Login\";\nimport Profile from \"./components/User/Profile\";\nimport CourseList from \"./components/Course/CourseList\";\nimport CourseDetails from \"./components/Course/CourseDetails\";\nimport TopicDetails from \"./components/Topic/TopicDetails\";\nimport StudentDetails from \"./components/Student/StudentDetails\";\nimport TrainerDetails from \"./components/Trainer/TrainerDetails\";\nimport ChangePassword from \"./components/User/ChangePassword\";\nimport TopicList from \"./components/Topic/TopicList\";\nimport StudentList from \"./components/Student/StudentList\";\nimport TrainerList from \"./components/Trainer/TrainerList\";\nimport Logout from \"./components/Partial/Logout\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Router>\n          <TopNav/>\n          <SideNav/>\n          <main>\n            <Switch>\n              <Route path=\"/\" exact component={Login}/>\n              <Route path=\"/profile\" exact component={Profile}/>\n              <Route path=\"/courses\" exact component={CourseList}/>\n              <Route path=\"/courses/:courseID\" component={CourseDetails}/>\n              <Route path=\"/topics\" exact component={TopicList}/>\n              <Route path=\"/topics/:topicID\" component={TopicDetails}/>\n              <Route path=\"/students/:studentID\" component={StudentDetails}/>\n              <Route path=\"/trainers/:trainerID\" component={TrainerDetails}/>\n              <Route path=\"/students\" exact component={StudentList}/>\n              <Route path=\"/trainers\" exact component={TrainerList}/>\n              <Route path=\"/change-password\" exact component={ChangePassword}/>\n              <Route path=\"/logout\" exact component={Logout}/>\n            </Switch>\n          </main>\n        </Router>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}